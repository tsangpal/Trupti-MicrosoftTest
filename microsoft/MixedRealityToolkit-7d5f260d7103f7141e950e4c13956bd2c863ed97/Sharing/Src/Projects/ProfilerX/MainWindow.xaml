<Window x:Class="ProfilerX.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:ProfilerX" x:Name="window"
        Title="ProfilerX" Height="705" Width="1071">
    <Window.Resources>
        <local:DurationToBrushConverter x:Key="DurationToBrushConverter" />
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid
          Width="15"
          Height="13"
          Background="Transparent">
                            <Path x:Name="ExpandPath"
            HorizontalAlignment="Left" 
            VerticalAlignment="Center" 
            Margin="1,1,1,1"
            Fill="{StaticResource GlyphBrush}"
            Data="M 4 0 L 8 4 L 4 8 Z"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked"
               Value="True">
                                <Setter Property="Data"
                TargetName="ExpandPath"
                Value="M 0 4 L 8 4 L 4 8 Z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0,0,0,0"
                 StrokeThickness="5"
                 Stroke="Black"
                 StrokeDashArray="1 2"
                 Opacity="0"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="TreeViewItemTemplate" TargetType="{x:Type TreeViewItem}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="19"
                      Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <ToggleButton x:Name="Expander"
                  Style="{StaticResource ExpandCollapseToggleStyle}"
                  IsChecked="{Binding Path=IsExpanded,
                              RelativeSource={RelativeSource TemplatedParent}}"
                  ClickMode="Press"/>
                <Border Name="Bd"
              Grid.Column="1"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              Padding="{TemplateBinding Padding}">
                    <ContentPresenter x:Name="PART_Header"
                      ContentSource="Header"
                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                </Border>
                <ItemsPresenter x:Name="ItemsHost"
                  Grid.Row="1"
                  Grid.Column="1"
                  Grid.ColumnSpan="2"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded"
               Value="false">
                    <Setter TargetName="ItemsHost"
                Property="Visibility"
                Value="Collapsed"/>
                </Trigger>
                <Trigger Property="HasItems"
               Value="false">
                    <Setter TargetName="Expander"
                Property="Visibility"
                Value="Hidden"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="HasHeader"
                     Value="false"/>
                        <Condition Property="Width"
                     Value="Auto"/>
                    </MultiTrigger.Conditions>
                    <Setter TargetName="PART_Header"
                Property="MinWidth"
                Value="75"/>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="HasHeader"
                     Value="false"/>
                        <Condition Property="Height"
                     Value="Auto"/>
                    </MultiTrigger.Conditions>
                    <Setter TargetName="PART_Header"
                Property="MinHeight"
                Value="19"/>
                </MultiTrigger>
                <Trigger Property="IsSelected"
               Value="true">
                    <Setter TargetName="Bd"
                Property="Background"
                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected"
                     Value="true"/>
                        <Condition Property="IsSelectionActive"
                     Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter TargetName="Bd"
                Property="Background"
                Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled"
               Value="false">
                    <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <DockPanel LastChildFill="True">
        <Grid DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="pauseButton" Content="Pause" Grid.Column="0" Margin="10" Padding="5" Click="pauseButton_Click">
            </Button>
            <GroupBox Header="Recorded Frames" Grid.Column="1" Margin="0,0,10,0">
                <ListBox x:Name="frameList" Margin="3" Height="47" VerticalAlignment="Top" ItemsSource="{Binding Path=SelectedItem.Frames, ElementName=AppList}">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,0" CanVerticallyScroll="False"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Rectangle Margin="0,0,0,0" MinWidth="5" Fill="{Binding Path=MaxDuration, Converter={StaticResource DurationToBrushConverter}}" Width="5" Height="25" StrokeThickness="0"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Padding" Value="0" />
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </GroupBox>
        </Grid>
        <GroupBox DockPanel.Dock="Left" Header="XTools Apps" HorizontalAlignment="Left" Margin="10" MinWidth="200" UseLayoutRounding="False" IsManipulationEnabled="True">
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="25*"/>
                    <ColumnDefinition Width="69*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ListBox x:Name="AppList" SelectionMode="Single" ItemsSource="{Binding Streams, ElementName=window}" Grid.ColumnSpan="2">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>

                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding RemoteSystemName}" />
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Center" Grid.ColumnSpan="2" Margin="48,0">
                    <Button x:Name="AddButton" Click="AddButton_Clicked" Margin="5" Padding="5">Add</Button>
                    <Button x:Name="RemoveButton" Click="RemoveButton_Clicked" Margin="5" Padding="5">Remove</Button>
                </StackPanel>
            </Grid>
        </GroupBox>
        <Grid Margin="0, 10, 10, 10">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <GroupBox Header="Samples"  Grid.Row="0">
                <TreeView x:Name="threadList" Margin="5" ItemsSource="{Binding Path=SelectedItem.Threads, ElementName=frameList}" HorizontalContentAlignment="Stretch">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem">
                            <Setter Property="Template" Value="{StaticResource TreeViewItemTemplate}" />
                            <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}" />
                            <Setter Property="IsSelected"  Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.Resources>
                        <HierarchicalDataTemplate DataType="{x:Type local:ThreadData}" ItemsSource="{Binding Samples}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=ThreadID, StringFormat='Thread ID: {0}'}" />
                            </StackPanel>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate DataType="{x:Type local:SampleData}" ItemsSource="{Binding Samples}">
                            <DockPanel>
                                <TextBlock Text="{Binding Path=Duration, StringFormat=F}" Margin="0,0,5,0" DockPanel.Dock="Right" />
                                <TextBlock Text="{Binding Path=Name}" />
                            </DockPanel>
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>
                </TreeView>
            </GroupBox>
            <GroupBox Header="Logs" Grid.Row="1">
                <ListBox ItemsSource="{Binding Path=SelectedItem.Logs, ElementName=AppList}" >
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding MessageWithSeverity}" />
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </GroupBox>
        </Grid>
    </DockPanel>
</Window>
