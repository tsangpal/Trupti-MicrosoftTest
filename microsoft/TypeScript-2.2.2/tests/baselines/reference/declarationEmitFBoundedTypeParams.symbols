=== tests/cases/compiler/declarationEmitFBoundedTypeParams.ts ===

// Repro from #6040

function append<a, b extends a>(result: a[], value: b): a[] {
>append : Symbol(append, Decl(declarationEmitFBoundedTypeParams.ts, 0, 0))
>a : Symbol(a, Decl(declarationEmitFBoundedTypeParams.ts, 3, 16))
>b : Symbol(b, Decl(declarationEmitFBoundedTypeParams.ts, 3, 18))
>a : Symbol(a, Decl(declarationEmitFBoundedTypeParams.ts, 3, 16))
>result : Symbol(result, Decl(declarationEmitFBoundedTypeParams.ts, 3, 32))
>a : Symbol(a, Decl(declarationEmitFBoundedTypeParams.ts, 3, 16))
>value : Symbol(value, Decl(declarationEmitFBoundedTypeParams.ts, 3, 44))
>b : Symbol(b, Decl(declarationEmitFBoundedTypeParams.ts, 3, 18))
>a : Symbol(a, Decl(declarationEmitFBoundedTypeParams.ts, 3, 16))

    result.push(value);
>result.push : Symbol(Array.push, Decl(lib.d.ts, --, --))
>result : Symbol(result, Decl(declarationEmitFBoundedTypeParams.ts, 3, 32))
>push : Symbol(Array.push, Decl(lib.d.ts, --, --))
>value : Symbol(value, Decl(declarationEmitFBoundedTypeParams.ts, 3, 44))

    return result;
>result : Symbol(result, Decl(declarationEmitFBoundedTypeParams.ts, 3, 32))
}

