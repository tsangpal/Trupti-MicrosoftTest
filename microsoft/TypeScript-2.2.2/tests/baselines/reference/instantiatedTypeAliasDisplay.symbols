=== tests/cases/compiler/instantiatedTypeAliasDisplay.ts ===

// Repros from #12066

interface X<A> {
>X : Symbol(X, Decl(instantiatedTypeAliasDisplay.ts, 0, 0))
>A : Symbol(A, Decl(instantiatedTypeAliasDisplay.ts, 3, 12))

    a: A;
>a : Symbol(X.a, Decl(instantiatedTypeAliasDisplay.ts, 3, 16))
>A : Symbol(A, Decl(instantiatedTypeAliasDisplay.ts, 3, 12))
}
interface Y<B> {
>Y : Symbol(Y, Decl(instantiatedTypeAliasDisplay.ts, 5, 1))
>B : Symbol(B, Decl(instantiatedTypeAliasDisplay.ts, 6, 12))

    b: B;
>b : Symbol(Y.b, Decl(instantiatedTypeAliasDisplay.ts, 6, 16))
>B : Symbol(B, Decl(instantiatedTypeAliasDisplay.ts, 6, 12))
}
type Z<A, B> = X<A> | Y<B>;
>Z : Symbol(Z, Decl(instantiatedTypeAliasDisplay.ts, 8, 1))
>A : Symbol(A, Decl(instantiatedTypeAliasDisplay.ts, 9, 7))
>B : Symbol(B, Decl(instantiatedTypeAliasDisplay.ts, 9, 9))
>X : Symbol(X, Decl(instantiatedTypeAliasDisplay.ts, 0, 0))
>A : Symbol(A, Decl(instantiatedTypeAliasDisplay.ts, 9, 7))
>Y : Symbol(Y, Decl(instantiatedTypeAliasDisplay.ts, 5, 1))
>B : Symbol(B, Decl(instantiatedTypeAliasDisplay.ts, 9, 9))

declare function f1<A>(): Z<A, number>;
>f1 : Symbol(f1, Decl(instantiatedTypeAliasDisplay.ts, 9, 27))
>A : Symbol(A, Decl(instantiatedTypeAliasDisplay.ts, 11, 20))
>Z : Symbol(Z, Decl(instantiatedTypeAliasDisplay.ts, 8, 1))
>A : Symbol(A, Decl(instantiatedTypeAliasDisplay.ts, 11, 20))

declare function f2<A, B, C, D, E>(a: A, b: B, c: C, d: D): Z<A, string[]>;
>f2 : Symbol(f2, Decl(instantiatedTypeAliasDisplay.ts, 11, 39))
>A : Symbol(A, Decl(instantiatedTypeAliasDisplay.ts, 12, 20))
>B : Symbol(B, Decl(instantiatedTypeAliasDisplay.ts, 12, 22))
>C : Symbol(C, Decl(instantiatedTypeAliasDisplay.ts, 12, 25))
>D : Symbol(D, Decl(instantiatedTypeAliasDisplay.ts, 12, 28))
>E : Symbol(E, Decl(instantiatedTypeAliasDisplay.ts, 12, 31))
>a : Symbol(a, Decl(instantiatedTypeAliasDisplay.ts, 12, 35))
>A : Symbol(A, Decl(instantiatedTypeAliasDisplay.ts, 12, 20))
>b : Symbol(b, Decl(instantiatedTypeAliasDisplay.ts, 12, 40))
>B : Symbol(B, Decl(instantiatedTypeAliasDisplay.ts, 12, 22))
>c : Symbol(c, Decl(instantiatedTypeAliasDisplay.ts, 12, 46))
>C : Symbol(C, Decl(instantiatedTypeAliasDisplay.ts, 12, 25))
>d : Symbol(d, Decl(instantiatedTypeAliasDisplay.ts, 12, 52))
>D : Symbol(D, Decl(instantiatedTypeAliasDisplay.ts, 12, 28))
>Z : Symbol(Z, Decl(instantiatedTypeAliasDisplay.ts, 8, 1))
>A : Symbol(A, Decl(instantiatedTypeAliasDisplay.ts, 12, 20))

const x1 = f1<string>();  // Z<string, number>
>x1 : Symbol(x1, Decl(instantiatedTypeAliasDisplay.ts, 14, 5))
>f1 : Symbol(f1, Decl(instantiatedTypeAliasDisplay.ts, 9, 27))

const x2 = f2({}, {}, {}, {});  // Z<{}, string[]>
>x2 : Symbol(x2, Decl(instantiatedTypeAliasDisplay.ts, 15, 5))
>f2 : Symbol(f2, Decl(instantiatedTypeAliasDisplay.ts, 11, 39))

